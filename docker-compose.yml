version: '3.8'

services:
  app:
    image: whale-alert:latest
    container_name: whale-alert
    restart: unless-stopped
    env_file: .env
    environment:
      - TZ=UTC
    volumes:
      - ./.env:/app/.env
      - whale-alert-data:/app/data
    networks:
      - whale-alert-net
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; import urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/health').getcode() == 200 else sys.exit(1)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Uncomment and configure if you're using PostgreSQL
  # db:
  #   image: postgres:15-alpine
  #   container_name: whale-alert-db
  #   restart: unless-stopped
  #   env_file: .env
  #   environment:
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - whale-alert-net
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  whale-alert-net:
    driver: bridge

volumes:
  whale-alert-data:
  # Uncomment if using PostgreSQL
  # postgres_data:
